name: Publish Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Module version (e.g. 1.1.0)"
        required: true
        type: string
      prerelease:
        description: "Mark as pre-release?"
        required: false
        default: false
        type: boolean
      draft:
        description: "Create as draft?"
        required: false
        default: false
        type: boolean
      make_latest:
        description: "Make this the 'latest' release? (true | false | legacy)"
        required: false
        default: "true"
        type: choice
        options:
          - "true"
          - "false"
          - "legacy"

permissions:
  contents: write

env:
  FIXED_REPO: "paulcheeba/chat-pruner"
  FIXED_MANIFEST_URL: "https://github.com/paulcheeba/chat-pruner/releases/latest/download/module.json"
  FIXED_DOWNLOAD_URL: "https://github.com/paulcheeba/chat-pruner/releases/latest/download/chat-pruner.zip"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # needed to push a commit back to main

      - name: Ensure jq & zip are available
        run: |
          sudo apt-get update
          sudo apt-get install -y jq zip

      - name: Rewrite module.json (version, fixed manifest, fixed download)
        shell: bash
        run: |
          VERSION="${{ inputs.version }}"
          MANIFEST_URL="${FIXED_MANIFEST_URL}"
          DOWNLOAD_URL="${FIXED_DOWNLOAD_URL}"

          if [ ! -f module.json ]; then
            echo "module.json not found at repo root. Exiting."
            exit 1
          fi

          cp module.json module.json.bak

          jq --arg v "$VERSION" \
             --arg manifest "$MANIFEST_URL" \
             --arg download "$DOWNLOAD_URL" \
             '
             .version = $v
             | .manifest = $manifest
             | .download = $download
             ' module.json > module.json.tmp

          mv module.json.tmp module.json

          echo "Updated module.json:"
          cat module.json

      - name: Commit updated module.json to main
        if: ${{ endsWith(github.ref, '/main') }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add module.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Release v${{ inputs.version }}: update module.json"
            git push origin HEAD:main
          fi

      - name: Build ZIP (chat-pruner.zip)
        shell: bash
        run: |
          test -f module.json
          ZIPNAME="chat-pruner.zip"
          rm -f "$ZIPNAME"

          # Create a clean ZIP with module files at the root.
          zip -r "$ZIPNAME" . \
            -x ".git/*" \
               ".github/*" \
               ".gitignore" \
               "docs/*" \
               ".DS_Store"

          echo "ZIP contents:"
          unzip -l "$ZIPNAME"

      - name: Create GitHub Release & Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: v${{ inputs.version }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          make_latest: ${{ inputs.make_latest }}
          files: |
            chat-pruner.zip
            module.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
